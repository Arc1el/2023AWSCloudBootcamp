오늘 강의해주실 분은 김성일 님 이시고요 제가 앞서 잠시만요. 제가 화면 성혜림혹시 마이크 한번 켜보시겠어요 혹시 들리시나요? 근데 들립니다. 그러면 성혜림강의 먼저 일정하고 먼저 소개해주시고 강의 진행하시겠어요 일정이요 아까 그 보여주신 그 그거띄울까요? 네네. 네. 좀 아니면 네. 그러면 제가 그 장편을 좀 띄우겠습니다. 잠시만요. 이게 제가 이메일 이게 포인트가 어떨때는 이렇게 을 업그레이드 한 다음에 이게 안 떠가지고 를 자꾸 하게 되는데 이게 또 안 뜨네요 또 그러면 이거 제가 끝나고 나서 그러시죠. 다시 말씀 한번 드릴게요. 네. 그러면 바로 시작하실 건가요? 등을 준비할까요 바로 시작을 하겠습니다. 네. 네. 그러시죠. 네. 그러면은 일 주차 강의를 먼저 시작하고요. 나중에 이제 끝날 때 쯤에 한번 그 저희 처음 이렇게 다 같이 시작하는 날이니까 그 이렇게 좀 회사별로 돌아가셨으면 돌아가면서 또 한번 간단하게 이렇게 소개를 해 주셨으면 간단하게 본인 소개를 해주시면 좋을 것 같습니다. 팔주차를 우리가 같이 이렇게 진행해야 되잖아요. 그러면 성인님. 네. 시작부탁드립니다. 네. 그러면 사실 그렇게 자기소개를 하는 거면은 처 해도 좋을 것 같긴 한데 일단 소개를 좀 드리겠습니다. 네. 네. 네. 네. 안녕하세요. 저는 김석이라고 하고요. 에서 데이터 팀이 근무를 하고 있습니다. 그리고 저는 애널리틱스 관련된 제품을 포커싱의 한 스페셜리스트 라고 보시면 될 것 같고요. 오픈관련해 가지고 부분은 여러 세션을 저희가 좀 준비를 하고 있는데 그 중에서 대부분 세션을 저와 그리고 같이 일하는 다른 동료의 분들이 같이 진행을 해주실 예정이에요. 그래서 뭐 이 세션이 길다면 길고 짧다면 짧은 데 여러 주에 걸쳐서 이제 하시게 될 텐데 그 와중에 이제 걱정되시는 거나 아니면 고민되시는 부분들이 굉장히 많을 것 같고, 그리고 이전에 고객분들한테 들은 질문이나 이런 것들 중에 좀 해결이 안 되는 부분 이런 것들도 있을 것 같아요. 그래서 그런 것들도 같이 그냥 허심탄회하게 얘기하면서 편하게 진행했으면 좋겠습니다. 이 정도로는 하고요. 그러면 이게 제가 그 게스트분들을 마이크를 제가 이거를 할 수 있다라고 생각을 해요. 이게 클릭을 했는데 트가 안 되네요. 혹시 김현미 님 혹시 먼저 그 자리에 계시면 제가 이렇게 한 번씩 좀 이렇게 지정을 드리겠습니다. 간단하게 본인속에 이렇게 해주실 수 있을까요? 먼저 제일 먼저 윤승현 님 셨네요 이 간단하게 자기소개부탁드립니다. 안녕하세요. 내가 좀 록 지금 일하고 있는 윤승현입니다 잘 부탁드립니다. 감사합니다. 네. 그러면 다음에 아이구 화면이 제가 혹시 김은홍 님 자리계신가요 마이크 키시고 한번 간단하게 소개 부탁드리겠습니다. 사정이 여의치 않으신것 같으니까 일단 김현미 님 마이크키시고 본인 소개 간단히 부탁드리겠습니다. 음 송어가 안 되시는 것 같아요. 아, 그래요? 김현미 님 음속어가 되셨네요? 네. 간단하게 소개를 좀 부탁드리겠습니다. 또 다시 미트가 되셨네. 이게 이게 원래 어드민의 언뉴트 를 클릭거라면. 이게 되는데 돼야 되는데 인민님 하셨네요. 혹시 간단하게 자기 소개 좀 부탁드리겠습니다 될까요? 네. 네. 네. 안녕하세요. 저는 에서 이제 개발내부 개발을 진행하고 있는 개발자입니다. 반갑습니다. 반갑습니다. 이원주님. 안녕하세요. 활동하고 있는 네, 감사합니다. 대부분 김은홍. 님, 혹시 여의치 않으시면 손 돕기님. 네. 상황이 연히 치 않으시면 우원아님. 가능하실까요. 네. 인민균 의원님인민순님 다른 분들상황이 여의치 않으신것 같아서 제가 좀 유투하는 거를 이렇게 한 분 이거 좀 기능 체크를 좀 해서 이게 사실은 잘 됐었는데. 네. 그러면 본인 소개 는 다음 주 다음 기회에 좀 이렇게 하도록 하겠습니다. 네. 성령님. 그러면 오늘 진행하실까요. 네. 그러시죠. 네. 네. 다음 시작하겠습니다. 강연하신 분들이 카메라를 키우고 있는 좋을 것 같네요. 네. 네. 제가 그걸 미처 신경을 못 쓰고 갑자기 생각이 났는데 다음 시간에는 한번 간단하게 카메라 본인 소개 간단하게 하고 뭐 기대하는지 좀 그런 내용도 좀 같이 좀 얘기하는 시간을 갖도록 하겠습니다. 부탁드립니다. 처음 시작이 좀 어수선해서. 죄송합니다. 저희도 이게 아니여가지고 좀 익숙하지 않아서 그러네요. 오늘 이제 한 시간 정도 저랑 같이 전체적인 콘서트와 관련된 내용을 할 건데요. 좀 식사하고 나서 이제 약간 졸리시간이잖아요. 그래서 한번 저희 좀 채팅방에 좀 자유롭게 약간 인터넷 하게 가능하면 했으면 좋겠어서 질문을 하나 드릴게요. 오픈사치로 업무를 해보신 분들이 있으시면 숫자일 번을 한번 눌러봐 주시겠어요? 채팅메시지에 없으시면 이번 이렇게 한번만 눌러봐 주실래요? 감사합니다. 여러분들이 해주셨고 다 거의 다 대부분 처음이신 것 같네요. 네. 일번은 아무도 없으시군요. 그러면 혹시 엘라스틱 SUCH 를 사용해 보신 적이 있으신분이 있으면 1 번 없으면 이번 한번만 좀 봐 주시네요 조금씩 있으시네요. 네. 네. 한 분 계시네요. 네. 좋습니다. 네. 그러면 이제 제가 좀 이해가 됐습니다. 여러분들의 지금 상황이 좀 이해가 됐고 사실 전체적인 세션내용이 좀 처음 배우시는 분들한테는 어려울 수도 있을 것 같아요. 왜냐하면 이게 저희도 이제 고객사들을 나가서 이제 이렇게 피칭을 할 때 저희는 레벨링 으로 하는데 백 레벨 이백 네 배 삼백네 배 사백이런 식으로 얘기하거든요. 그래서 백 4 배를 완전히 기초 고 사백레벨을 좀 많이 잘 쓰시는 분들의 대상으로 이제 이렇게 레벨링 을 하는데 대부분의 객들이 거의 백 에서 이백 네 배 차이를 왔다 갔다 하고 있어요. 그런데 이제 파트너분들에게는 사실 그 정도 수준보다는 실무에서 직접 쓰실 수 있도록 하는 게 좀 더 중요하다고 보고 이번에 패션구성을 약간 삼백네 배에서 사백 내의를 왔다 갔다 하는 정도 수준으로 구성을 했거든요. 그래서 오늘은 사실은 삼백 명 다른 데는 까지 가진 않겠지만 이후에 에서 그 정도 수준이 나올 수도 있어서 만약에 혹시 좀 따라가기 버겁다거나 이해가 안 되는 게 있으시면 언제든지 성인님이나 저나 이렇게 얘기를 해주시면 될 것 같고 채팅방에도 자연스럽게 질문을 해주세요. 제가 이렇게 막 얘기를 하다가 저거 좀 이해가 안 되는데 또는 다시 듣고 싶다 라는 부분에 포인트가 있으시면 채팅방에 얘기를 해주시면 좋을 것 같아요. 그래서 편하게 질문 주시면 됩니다. 편하게 질문 주셔야, 저희도 편하게 패션을 할 수가 있어서 그렇게 생각해주시면 될 것 같고요. 제목이 보면 엘라스틱 SUCH 서비스의 후속 이라고 되어 있잖아요. 이게 무슨 얘기냐면 스로 예전에는 저희가 아마존엘라스틱 SUCH 서비스로 매니지드 서비스를 하고 있었어요. 근데 이게 최근에 최근 알죠? 일 년 반 정도 됐죠. 오픈SUCH 서비스로 이름이 바뀌었습니다. 여기에 관련된 히스토리도 좀 설명 드릴 거고 전체적인 구성이 어떻게 됐는지도 설명을 드리도록 하겠습니다. 네. 혹시 지금 오늘 오신 분들 중에 엔지니어가 아니면 세일즈분도 계신 것 같았는데 지금 두 가지로 좀 나눌 수 있을 것 같아요. 혹시 세일즈측면에서 오픈SUCH 를 기대하고 오신 분이 있으시면 일반 한번 눌러봐 주실 수 있나요? 네. 한 분 계시군요. 네. 좋습니다. 네, 그러면 오늘은 사실은 한 반반 정도 되는 것 같아요. 반 정도가 이제 셰일측면에서. 그리고 어떤 오픈한 제품에 대해서 설명하기 위한 내용이 한 반 정도 있고 나머지 반을 한 기술적인 내용이 있을 것 같아서 그런 것들을 좀 이게 해주시고 봐주시면 좋을 것 같아요. 고객들한테 이제 오픈SUCH 를 설명하러 나갔을 때 보통 하는 얘기가 출발이 잃었습니다. 확실아시는 내용이죠. 데이터가 워낙 폭발적으로 증가를 하고 있다, 우리가 지금 애플리케이션이나 플러스 인프라스트럭처관점에서도 보면 뭐 서비스 라던지, 마이클 서비스, 애플리케이션, 비즈니스 애플리케이션, 이런 곳에서 굉장히 많은 로그들이 쏟아져 나오고 있죠. 데이터들도 어마어마하게 증가하고 있고 뭐 이런 측면이 아니더라도 사실 뭐 로드플러스 나 데이터베이스 네트워크서버 이런 데서도 데이터가 굉장히 많이 나오죠. 그리고 특히나 전자나 이런 뭐 삼성전자전자이런 고객사들은 이나 무선 연결 또는 뭐 자동차에서 나오는 그런 정보들도 요즘에는 굉장히 많이 늘어나고 있습니다. 이런 데이터들이 많이 늘어나고 있는데 실제로 아닌 내용을 보면 되게 익숙한 내용이 있긴 하죠. 웹 서버에서 나오는 로그들인데 이런 내용들이 사람이 눈에 봤을 때 되게 가시적이지가 않아요. 근데 이런 것들이 테라바이트페타바이트 이렇게 쌓이게 되면 과연 내가 원하는 정보를 어떻게 찾을 수 있을까 빠르게 이런 고민들을 하게 되는 거죠. 기존의 아마 경험 많으신 분들이 있으실 텐데 서버에 직접 이 녹스의 콘솔 로 들어가셔가지고 각종 명령으로 그랬잡으셔 가지고 보고 또 찾아서 또 로그위치찾아서 들어가서 또 그랬잡아서 보고 뭐 이런 식의 방법들을 많이 사용을 하셨는데 그것도 데이터 사이즈가 작거나 어느 정도 불벽화됐을 때는 가능한데 그렇게 엄청나게 많아지고 로크타입도 다양해지고 로그에 쓰이는 패턴도 되게 다양해졌을 때는 쉽지 않은 상황이 돼버리는 거죠. 그래서 고객들은 사실은 로그에서 보고 싶은 것들, 큰 데이터에서 보고 싶은 것들이 얘기한 세 가지 측면으로 보통 많이 얘기를 하세요. 그래서 애플리케이션 관점에서는 우리 인프라스트럭처나 애플리케이션 이 동작을 잘하고 있는가 또는 어디 어딘가에서 문제가 있어서 지연 시간이 생기는데 지연시간이 생기는 곳에 위치는 어디고 그리고 에러율을 만큼 되는가 예를 들면 뭐 사용자가 백 번이 요청을 하는데 여기서 사백 번, 때로는 몇 퍼센트 정도 되는가 이런 것들을 보고 싶어 하는 거죠. 그리고 특정한 부분에서 어디서 과연 문제를 유발시키는 가 이런 부분들을 알고 싶어하는 게 가장 많습니다. 그리고 요즘에 좀 새로 나온 이야기들인데 보안 측면에서도 많이 궁금해하세요. 그래서 로그를 딱 보면서 인증 활동에서 이제 수상한 점은 없는가, 또는 뭐 특정 IP 가 좀 이상한 행동에 패턴을 하는데 이 아이피를 가지고 다른 로그에서 보면서도 또 다른 짓을 하지 않았는가 이런 것들을 하고 싶어 하세요. 그리고 애플리케이션 관점이기도 한데 약간 사기를 치기 위한 뭔가 잘못된 방법으로 접근을 하거나 잘못된 방법으로 결제를 해서 그런 관련된 내용들은 없는가 이런 것들도 보고 싶어 하십니다. 그리고 비즈니스 입장에서도 많이 보고 싶어하는 사실 앞에 두 개는 좀 엔지니어관점이라든지 아니면 보완적인 측면에서 관점인데 뒤에 부분은 비즈니스 분석과 적인 관점이 많은 경우가 있어요. 예를 들어서 뭐 쇼핑몰에서 고객들이 클릭 클릭 하면서 상품의 구매까지 하는데 이 구매여정을 보면서 과연 어떤 상품이 관심이 있고 어떤 컨텐츠가 관심이 있는가, 또는 어떤 걸 많이 클릭을 하지, 또 어떤 시간에 어떤 행동을 보일지 이런 식의 비즈니스 인사이트를 얻고 싶을 때가 있어요. 그래서 이런 경우에서도 데이터에서 뭔가를 얻고 싶어 한다, 이런 걸 염두에 두시면 좋을 것 같아요. 그런데 문제는 굉장히 빨리 찾고 싶어하죠. 굉장히 빨리 그리고 실시간으로 전달이루어져야 된다는 요건들도 있습니다. 그런데 이 두 가지를 다 한번에 하기에는 기존의 방식으로는 굉장히 어려운 그런 목표가 될 수가 있겠죠. 그래서 네 가지 정도로 십실시간 검색이 필요한 영역을 좀 나눠보면 있기 잘 아실 것 같아요. 포팡이라든지 아마존닷컴 같은 곳에서 전자상거래에서 원하는 상품을 검색하는 경우가 있고요. 또는 문서 포털 이라고 해가지고 보통 이런 거 있죠. 회사 내부의 문서 들을 다 모아서 그 안에 있는 본문을 검색 한다든지 아니면 영국기사뉴스 기사이런거 검색 할 때도 있죠. 그래서 어떤 키워드나 문장을 가지고 수많은 문서에서 검색을 하는 경우 이런 케이스가 있고 또 하나는 개인화 추천 을 할 때도 많이 사용을 하는데 예를 들면 어떤 사람이 관심 있는 포인트를 가지고 유사한 것을 찾아줄 때 그럴 때도 실시간 검색이 필요합니다. 뭐 이런거 외에도 다양한 검색 사례가 있겠죠. 이런 것들을 수용하기 위해서 에서 있는 서비스가 무엇이냐라고 한다고 하면 저희는 아마존서비스를 설명을 그럴 수가 있어요. 아마도 콘서트 서비스가 뭐냐 라고 하면 한번 읽어 볼게요. 대화형 요구 분석, 그리고 실시간 애플리케이션 모니터링 웹사이트 검색을 쉽게 수용할 수 있습니다. 라고 나오죠. 혹시 오늘 오신 분들 중에 월요일날 저희 본사에서 한 파트먼트세션을 오신 분들은 아마 좀 아실텐데. 아까 제가 그래서 여러가지 케이스를 설명을 드렸는데 가장 많이 사용하는 케이스는 사실 검색이랑 녹음을 각 입니다. 그래서 고객들이 이제 질문을 할 때 빠른 범죄가 원하거나 아니요. 로그를 한통에 모아놓고 통합적으로 분석하고 싶다, 이런 케이스가 혹시 요건이 생긴다 라고 하는 오픈SUCH 를 제일 먼저 생각을 해주시면 좋을 것 같아요. 그래서 제가 초반에 설명을 드렸었는데 엘라스틱 SUCH 라는 얘기를 제가 잠깐 드렸어요. 검색 솔로 사는 있어서 어떻게 보면 가장 대중적으로 많이 쓰고 있었던 오픈소스가 엘라스틱 SUCH 니까 그래서 보통 케이스택이라고 보도말을 많이 하는데 이게 이제 앞에서 이제 플라스틱 SUCH 히 바나의 앞자를 따가지고 이라고 부르거든요. 그런데 이 세 가지를 합쳐가지고 뭔가 데이터를 모으고 보고 분석하고 이런 것들을 하는 걸 이제 보통 이라고 하는데 그 중에 엔진이 되는게 엘라스틱 니까 이게 이제 예전까지는 오픈소스로 공개가 되어 있었어요. 그래서 아파치 오픈소스로 공개되어 있었는데 얼마 전부터 더 이상 오픈소스가 아니게 되었습니다. 그래서 입장에서는 고객들에게 오픈소스 기반으로 서비스를 제공해드리여야 하기 때문에 그래서 칠점일공버전이라고 되어 있는데 사실은 칠점일공점이 버전에서 포크를 니다. 포크를 따서 오픈SUCH 서비스를 만들게 되죠. 그래서 엘라SUCH 가 칠점일곰이 버저그 이후부터는 오픈SUCH 로에서 제공이 된다라고 생각을 해주시면 될 것 같아요. 콘솔 에 들어가시면 모든 서비스가 그렇지만 클릭으로 당하기 때 구성 하시고 배포 하실 수가 있잖아요. 그래서 들어가서 해보시면 아시겠지만 예전 버전도 사용을 가능합니다. 그래서 엘라스 SUCH, 일점오에서 칠점공 까지 사용을 하실 수 있고 그 위에 버전을 사용하신다치면 오픈SUCH 로 지금 이점오 까지가 최신 버전이거든요 NEEDS 서비스 에서는 이점오 까지가 최신 버전이라서 이거를 선택하셔서 사용을 하실 수가 있어요. 혹시 여기까지 질문 있으시면 채팅방에 편하게 해주세요. 그래서 계속 쭉 말씀을 드리면 오픈SUCH 라고 하는 이 마크가 얘는 오픈소스의 마크 입니다. 오픈소스의 마크 고 커뮤니티가 주도하는 제품입니다. 그래서 만 하는 건 아니고요. 다양한 회사들에서 파트너십을 가지고 운영을 하고 있고, 일반 개발자들도 거기서 컨트리미션을 해가지고 개발을 하고 있는 거라고 알고 계시면 좋을 것 같아요. 그래서 오픈SUCH 를 매니지드 서비스 로 디플로를 시키시면 엔진 해당하는 큰 SUCH 가 하나가 만들어지고 그 다음에 오픈SUCH 대시 보드 라는 게 하나가 만들어져요. 그러면 두 가의 차이점은 뭐냐면 이거는 어떤 데이터베이스 역할도 하고 검색 역할을 해주는 핵심코어라고 생각을 하시면 되고요. 데시보드는 여기에 연결돼서 시각화를 보여줄 수 있는 화면이구나 라고 생각을 해주시면 될 것 같습니다. 두 가지가 다 한번에 배포가 됩니다. 그래서 보통 사용하는 방법 방식은 텍스트 검색을 많이 사용을 하시고요. 자 연어를 통해서 검색을 하시거나 조건이 되게 많다. 그런 블링커리를 쓰실 수도 있고, 검색한 키워드를 클리로 검색을 하실 수도 있지만 비슷한 검색도 찾아줘요. 그래서 유사도를 가지고 얼만큼 내가 검색한 것과 유사한 지를 찾아서 스코링을 해서 스코링이 높은 6 부터 이렇게 쭉 보여주는 그런 기능을 가지고 있습니다. 두번째로는 스트리밍을 이제 할 때도 많이 사용하는데요. 데이터들이 이제 스트리밍으로 들어올 때 예를 빠르게 받아들여 주는 여성이 오픈어치고 여기 들어온 녀석을 빠르게 검색 까지 할 수 있구나 라고 생각을 해주시면 좋을 것 같아요. 그래서 텍스트 검색도 되지만 시계열 분석 이라고 여기가 나와있죠. 시계열 분석 같은 경우는 아까 로 굴 로그를 가지고 보통 노후가 이제 시대에 단위로 들어오니까 일주일 단위로 데이터를 가지고 와서 시 결로 분석을 하는 경우도 많구나 라고 생각을 해주시면 좋겠습니다. 아마 월요일날 들으신 분도 계실 텐데 중간에 이제 클러스터 라는 개념이 결국에 높은 SUCH 본체고요 왼쪽은 이카소스 를 만들어내는 여서, 오른쪽은 사용자 입니다. 그래서 서버 나 아니면 애플리케이션에서 요구들이 쭉쭉쭉쭉 떨어질 텐데 그 로 그들을 여기 보시면 레스트를 통해서 전달한다고 되어있죠 네스트 를 통해서 전달한다는 소리 는 사실 S 나 이런 방식으로 포스트 뭐 이런 식으로도 바디의 데이터를 너는 데이터가 들어간다는 얘기죠. 그래서 레스트를 통해서 데이터를 들어가는데 거기 안에 들어가는 데이터 본문에 양식은 제이슨 형태로 집어넣는다고 보시면 됩니다. 그리고 마찬가지로 데이터를 검색할 때도 마찬가지로 스트 를 사용을 하고 있고요. 그래서 뭐 이런 메스설명을 해 가지고 내가 원하는 조건들을 입력을 하면 예를 들면 어떤 필드의 이름, 조건 이런 것들을 넣어서 명령을 날리면 데이터를 보실 수 있는 라고 생각을 해주시면 될 것 같아요. 혹시 여기까지 질문이 있으실까요? 네. 제가 네 얼굴을 보면서 하는 게 아니라서 지금 얼만큼 따라오계신지가 간이 안 잡혀서 한번 여쭤봤습니다. 여기 보면은 이번에 보면 데이터를 새긴 한다고 되어 있잖아요. 회견한다는 말이 사실은 데이터베이스를 사용하시는 분들은 조금 헷갈리실 수가 있어요. 그래서 새긴 에 대해서도 뒤에 가서 조금 얘기를 해볼게요. 그러면 과연 톤 SUCH 라는 녀석이 어떻게 구성되었길래 빠른가라고 생각을 하실 수도 있을 것 같아서 제가 이거를 준비해 봤거든요. 왼쪽에 보면 이제 도큐먼트 일이삼이라고 해서 이걸 문서 라고 표현을 해볼게요. 그렇게 문서는 이렇게 본문이 있습니다. 영어로 되어 있지만 어쨌든 어떤 문장에 본문들이 있고 얘네는 뭐 제가 한 문장으로 써놨지만 여러 문제 하는 걸 수도 있죠. 검사하나 안에는 그래서 이런 문서를 오픈SUCH 안에 집어넣을 때는 뭐 다양한 방법이 있겠지만 보통 애널라이저를 통해서 집어넣어요. 그래서 애널라이저를 이렇게 통과를 하게 되면 여기에 있는 문서에 있는 문장들이 토크, 나가됩니다 토크 나 가 돼서 하나씩 잘리게 되겠죠. 근데 토크나 하는 방식도 되게 다양하게 있는데 오늘은 그걸 말씀드리지 않을 거고요. 그냥 가장 이해하기 쉽게 우리가 띄어쓰기단위로 토크 나를 시킨다고 생각을 해보죠. 그러면 뭐 더 브라이트블루워터플라뭐 이런 식으로 하나씩 쪼개지겠죠 나는 쪽에 지금 상황에서 애널라이저 안에 이제 또 필요 없는 의미가 좀 없는 내용을 지우는 것들이 있어요. 그래서 예를 들면 더구나 떠나온 이런 것들은 문장을 이게 투이런 건 별로 문장을 이해하는데 큰 의미가 없잖아요. 이런 것들은 탑재를 하고 나면 순수하게 그 문도큐먼트 에 있는 내용을 파악할 수 있는 그런 단어들로만 남게 될 겁니다. 그래서 예를 들어서 여기에서는 브라이트블루핸드뭐 츠 이런 녀석들만 남겠죠. 그래서 이런 녀석들을 모아가지고 이런 식으로 일종의 단어장 같은 거를 만들어요. 그래서 야 앞에 있는 건 그냥 시퀀스라고 보시면 될 것 같고요. 뒤에 있는 텀은 용어입니다. 그래서 그때 아까 제가 말씀드린 토크 나 된 단어가 여기에 이렇게 원씩 다 들어가는 거죠. 그래서 에스트는 이 세 개의 문서 중에 이번 문제가 있구나 블루는 세계 문서, 주중에 1 번 3 번에 있구나 이런 식으로 다 데이터를 저장을 합니다. 마치 우리가 그 책 볼 때 있잖아요. 책 볼 때 가장 뒤에 보면 빨리 찾기 셰김이 있어요. 그것처럼 내가 원하는 단어가 예를 들면 자동차라는 단어가 책에서 어디 몇 페이지에 나왔는지를 보고 싶을 때 우리가 세계를 보잖아요 그거랑 비슷한 방식이라고 생각하시면 돼요. 그래서 이렇게 해 놓으면 예를 들어서 이렇게 정리만 잘되어 있으면 사용자가 베스트라는 것을 검색을 하면 이번 문서가 있구나 바로 찾을 수 있겠죠. 이런 식으로 빨리 찼으니까 이걸 보고 저는 역인덱스라고 하고 영어로는 인덱스라고 얘기를 하는데 우리가 이런 방식을 사용을 하지 않고 검색을 하면 어떻게 될까요? 혹시 데이터베이스를 많이 쓰시는 분들은 아마 아실 것 같은데 본문을 다 읽어야 되죠. 특별한 방식을 하지 않는 이상은 라이트 같은 걸로 다 읽어야 되잖아요. 그러면 예를 들어서 뭐 많은 부분 중에 베스트 를 읽고 싶으면 모든 데이터를 훑어가면서 베스트가 있는지 없는지 체크를 해야 될 텐데 이렇게 미리 만들어 놓으면 바로 찔러서 이번에 있구나 라고 알 수가 있겠죠. 그래서 이게 뭐 전체적인 내용은 아니었는데 컨셉사항으로는 이렇다라고 생각을 해주시면 될 것 같아요. 그래서 이렇게 단어를 뽑아서 어떤 문서가 있는지를 다 미리 매핑을 해놨기 때문에 검색이 빠를 수밖에 없다, 그리고 그거를 역인덱스 방식이라고 한다 정도만 알고 지나가는 좋을 것 같습니다. 그래서 앞에서 제가 이렇게 문서 라고 말씀을 드리는 용어가 있어요. 제가 여기 설명을 안 드리고 넘어갔는데 문서는 사실 우리가 생각하는 그냥 일반적인 문서 개념이랑 비슷하다고 생각을 하시면 되는데 오픈SUCH 에서는 문서를 어떻게 보냐 라고 하면 아까 제이슨 타입으로 데이터를 넘다고 말씀을 드렸잖아요. 그래서 지금 딱 보시는게 키벨류로 되어 있는 제 스타일이죠 이름은 이러고 나이는 이러고 컴펀드는 치르고 데이트는 번째고 이런 것들을 키벨리로 쭉 넣고 이렇게 표현되어 있는 제이슨 형태의 하나를 도큐먼트라고 합니다. 그러면 이 제이슨 타입이 여러 개 들어가면 도 코멘트가 여러 개 들어가게 되는 거겠죠. 그래서 아까 제가 초반에 말씀드렸을 때 여기서 데이터를 입력받아 주는 일 번 역할을 할 때 갖가지 익스타입이 들어가게 되고요. 데이터베이스 에서는 일대일 매칭은 되진 않지만 형태라고 보시면 돼요. 레코드 형태그래서 레코드가 셰줄 들어간다 이 말인지 콘서트에서는. 이렇게 생긴 문서가 세 개가 들어간다 라고 생각을 해주시면 될 것 같아요. 그러면 뭐 여기서는 존 스미스가 있지만 두 번째 문서 에서는 김성인이 되고 세번째 문서에서는 또 다른 분이 되고 이런 식으로 데이터가 들어갈 수가 있는 거죠. 그래서 제가 문서에 대해서 설명을 드렸어요. 문서는 제이슨 형태로 들어간다고 했고 이 문서들이 지금 보시는 그림처럼 하나하나가 문서 죠. 그래서 데이터베이스 에서는 레코드처럼 생각을 해주시면 되고 이 문서들이 하나하나 합쳐진 게 인덱스 라는 개념이 들어갑니다. 그래서 또 새로운 내용이 나왔죠. 그래서 이 문서들의 논리적인 합은 인덱스 라는 것으로 부른다라고 생각을 해주시면 돼요. 그래서 제가 지금 말하는 새로운 용어들은 계속 계속 앞으로 이제 세션내내 나올 내용이라서 얘기를 좀 드리고 그리고 고객 분들도 바로 이 내용 용어로 얘기를 하실 수가 있어요. 인덱스가 어쩌고 저쩌고 도큐먼트가 어쩌고 어쩌고 이렇게 얘기가 나오면 이 개념을 얘기를 하는거구나라고 생각을 해주시면 됩니다. 아까 스미스 에 관련된 내용이 여기에 있고 김성일에 관련된 내용이 여기가 있고 쭉쭉쭉 다른 사람이 있을 텐데 이런 내용은 어떤 하나의 인덱스안으로 데이터가 다 들어가는구나 라고 생각을 해주면 돼야 됩니다. 그래서 예를 들면 인덱스 이름이 인적 사항 이렇게 만약에 이름이 있으며 인적사항인덱스 안에 각각의 사용자들의 도쿄로 들어가는구나 라고 생각을 해주시면 됩니다. 구조적인 측면에서 보면 제가 지금까지 말씀드린 인덱스가 제일 위에 속해 있어요. 그래서 데이터를 넣을 때는 사실 A 입장에서 보면 AND 포인트가 인덱스 에요. 그래서 예를 들면 푼 어떤 인덱스 에다가 놓겠습니까 이런 식으로 데이터를 집어넣거든요 꽃어떤 INDEX데이터를 집어넣겠습니다. 그러면 이 인덱스 이름으로 데이터를 집어넣게 되고, 그 밑에는 이제 구조적으로 보면 샤드 라는 녀석이 도 나와요. 라는 해석이 나오는데, 인덱스는 여러 개의 샤드의 논리적인 합의라고 생각을 하시면 됩니다. 그러니까 하나의 인덱스는 여러 개의 샤드를 가지고 있어요. 혹시 이해가 되실까요 하나의 인덱스는 여러 가지 여러 개의 샤드를 가지고 있다. 이게 물물리적으로 가지고 있는 거라고 생각을 해주시면 돼요. 왜 이렇게 샤드를 쪼갈까요 인덱스 에 있는 데이터를 왜 이렇게 샤들을 소개할까요? 혹시 뭐 편하게 한번 얘기 한번 해볼까요? 아무 말씀이라도 좋습니다. 왜 쪽일까요? 인덱스 네. 처리량이 많은 해결을 위해. 네, 감사합니다. 가용성 측면일까요 그분께서 말씀을 해주셨는데요 인상님이랑 도끼를 말씀해주셨는데. 감사합니다. 이 둘 다 맞습니다. 둘 다 받고 그 인덱스 가 양이 어마어마하게 막 어마어마하게 많아지면 어떻게 될까? 예를 들어서 뭐 일메갈 때는 크게 상관없겠죠. 얘가 터가 되면 어떻게 될까요? 덩어리가 우리가 검색해야 되는 그 토스자체가 너무 커지는 거죠. 검색을 해야 되는 소스자체가 너무 커져서 머신하나 하나 하나 에서 이걸 다 처리할 수가 없을 겁니다. 그래서 인덱스 를 물리적으로 차들을 이렇게 남북이 되는 거죠. 그러면 지금 얘기해서는 인덱스 를 하나인데 샤드가 세기 잖아요. 그러면 세대에서 병렬적으로 검색을 할 수 있게 되죠. 물리적으로 나눌 수 있으니까요. 그러면 다시 바꿔서 얘기해보면 샤들과 백개라. 그러면 백개의 노드에서 백개의 머신에서 병렬적으로 검색을 한번 할 수 있는 거죠. 그런 측면이 가장 커요. 그래서 오픈SUCH 를 분산형 검색엔진이라고 하거든요. 근데 사실 오픈SUCH 이전에 루식 이라는 해석이 있었어요. 이따가 설명을 드릴건데. 루 씨는 분산형 검색엔진이 아니었다. 그 말이 동시에 여러 군데에서 한번에 검색할 수 있다는 게 아니죠. 근데 이렇게 검색을 할 수 있게 만들어준 게 콘서트 이고, 그렇기 때문에 여러 노조를 계속 스케일아웃 하면 그만큼 성능이 계속 올라갈 수 있다라고 생각을 해주시면 됩니다. 그래서 차이라는 녀석은 여러 개가 생길 수도 있고, 여러 개의 샷을 갖춰져서 하나의 인덱스가 되는구나 라고 생각을 해주시면 돼요. 그래서 이렇게 개념을 잡아주시고 제가 그렇게 색깔로 두 개를 구분했어요. 위에는 파란색이고 밑에는 초록색 이잖아요. 이게 그냥 해놓은 건 아니고 제가 어떤 의미를 두고 했습니다. 파란색은 오픈SUCH 의 입장에서 본 구조라고 생각을 해주시면 돼요. 그래서 직장이라고 녹색을 무신입장에 다고 합니다. 그러면 오픈SUCH 는 지금까지 계속 얘기를 했기 때문에 이해가 되실 텐데 루 씨는 또 뭐냐 라고 생각을 하실 수가 있어요. 루시같은 경우는 원래 앨라스SUCH 나오콘서트가 나오기 전에 그 전부터 사용하던 검색엔진의 원조격이란 라이브러리 라고 생각을 해주시면 돼요. 잡아로 만들어진 건데 이 라이벌 이랑 라이브러리 라고 생각을 해주시면 되고 이 라이브러리 는 사실 코딩으로 뭔가 모든 검색을 만드셔야 돼요. 그리고 아까 제가 병력으로 검색이 안 된다고 했잖아요. 그래서 그런 문제점을 가지고 있고 육신을 기반으로 만든 여러가지 검색엔진들이 있는데 그 중에 하나가 못이라고 생각을 해주시면 됩니다. 바꿔 말하면 오픈셔츠에 실제로 내부 구조를 파고 들어가다 보면 루이야기가 나오게 됩니다. 그래서 샤드 개념까지 말씀드렸는데 사실 이 샤드가 인덱스 라는 녀석을 내부적으로 가지고 있고 그 루쉰 인덱스는 또 내부적으로 세그먼트란 녀석을 가지고 관리를 해요. 그래서 가장 밑에 보면 그 세그먼트또 도큐먼트가 들어 있죠. 도큐먼트는 아까 제가 말씀드린 스미스 데이터가 여기 실제로 들어가는 거죠. 사실 플SUCH 만 생각을 한다고 하면 인덱스 나 샤대만 하시면 돼요. 근데 제가 왜 굳이 말씀을 드리냐하면 업무를 하시다가 트럼프 을 하신다거나 아니면 최적화를 하신다거나 이런 과정에서 루신인덱스 세그먼트라는 내용이 나올 수 있어요. 많이 나오거든요. 갑자기 뒤로 나와요. 이런 경우에는 지금 이 녀석이 좀 더 하루에 얘기를 하고 있구나, 어떤 이유로 그래서 이런 걸 좀 인지 하실 이라는 측면에서 자 이렇게 전체 그림을 그려 가지고 하늘에 알아보실 수 있도록 표현을 해봤습니다. 그래서 뭐 이런저런 얘기를 들었는데요. 이렇게 우리가 사람이 좀 알아보기 힘든 요구를 막사 한 다음에 이로그를 검색 거나 아니면 권리를 가지고 바로 검색을 하실 수 있죠. 이예지에서는 지금 이렇게 보이는 녀석들을 스테이터스가 이백인 코드만 검색을 하겠다 이런 걸 의미론적으로 보여주고 있고요. 이렇게 코리로 검색을 하실 수도 있겠지만 대시 보드 로 제공하고 있기 때문에 지각화된 화면에서 데이터를 좀 더 이해하기 쉽게 볼 수가 있습니다. 그 오픈SUCH 를 선택하시면 엔진이 하나가 있고 보드가 하나가 있다고 말씀드렸어요. 그래서 각각 AND 포인트가 있는데 포인트로 들어가면 지금 보시는 것처럼 화면을 구성하실수가 있어요. 그래서 아까 제이슨 타입을 데이터가 들어보는데 이걸 가지고 이 하나하나가 차트 거든요. 하나하나가 차트를 만드신 다음에 이런 것들을 들의 그 앤드랍이나 클릭하셔가지고 또 하나의 대시 보드 로 만드실 수가 있어요. 보드에서 데이터를 보면서 데이터가 어떻게 변하는지 또 클릭하면은. 예를 들어서 파란색을 클릭하면 이 파란색에 해당되는 여성만 다른 필터링이 돼서 모든 다른 화면에 또 데이터가 바뀌거든요 그런 식으로 데이터를 막 검색하실 수도 있고 아니면 내가 주도권 값을 이렇게 일자리를 최근 일주일 지만 보겠다, 한 달 지만 보겠다, 이런식으로 선택을 하실 수도 있습니다. 그래도 웹 브라우저 화면에서 간단하게 보실 수 있는 툴도 제공 되는구나 라고 생각을 해주시면 좋을 것 같아요. 이제 고객한테 물어보는 질문고객이 물어보는 질문 중에 이런 것들이 되게 많죠. 그래서 설치가 왜 필요하냐 지금 나는 잘 쓰고 있는데 오프라인을 설치하게 잘 쓰고 있는데 왜 필요하냐 이런 얘기를 분명히 하실 거예요. 그래서 많이 쓰고 계신 분들이 사실 엘라스틱 어치를 물어보잔을 받으셔가지고 설치를 하셔서 쓰시는 경우도 있고 오프 라멜위해 설치해서 쓰시는 경우도 있어요. 또는 오픈SUCH 자체도 오픈소스기 때문에 얘를 받아가지고 에다 설치하실 수도 있거든요. 어떻게 사용하시는 분들도 계세요. 근데 그렇게 사용을 잘 하실 수도 있겠지만 이게 운영을 한번 해보시면 운영난이도가 엄청납니다. 저도 하기 전에 클러스터를 운영을 해본 적이 있는데 정말 다양한 솔루션을 운영을 해봤는데 운영난이도가 굉장히 높은 편에 속해요. 그래서 여기도 나와 있지만은 전문지식이 필요하고요. 그 다음에 트럭이 쉽지 않습니다. 그리고 데이터가 사이즈가 드러나거나 허리가 바뀌는 경우에도 키맞이해야 될 부분들이 많고요. 그래서 오픈소스니까 싸지 않느냐 라고 생각을 하실 수 있는데 이 오픈소스를 관리해야 되는 비용이 어마어마하게 들어갈 수 있어요. 인력적으로 그래서 키쇼가 증가한다 이런 얘기가 있고요. 그 다음에 오픈소스를 사용하시면 특히 앨런 오픈소스를 사용하시면 엔터프라이즈급 에서 필요한 이런 고급 보안이라든지 경고머신런이 아니면 뭐 플라등등 이런 기능들을 사용을 하실 수가 없어요. 그래서 그런 기능을 사용을 하시려면 또 라이센스 버전을 구매를 하셔야 되거든요. 그래서 그런 문제가 있다, 기존의 그대로 사용하신 그런 문제가 있다라는 걸 생각해주해주시면 좋을 것 같고 자체 인프라를 구매하고 관리해야 되는 당연한 얘기죠. 그래서 이런 것들에 대한 문제가 있는 경우에 이나 오픈 SUCH 를 매니지드 서비스를 운영하는 경우가 많습니다. 그래서 이런 어려움들 때문에 많이들 서비스 로 넘어오고 계십니다. 제가 좀 이해하기 쉽게 세 가지로 나눠봤어요 제일 왼쪽에 보시는 온 프라미스가 있고 그 다음에 두 번째는 이 씨투가 있고 세 번째는 저희 매니저를 서비스가 있습니다. 그래서 온 프라미스의 오픈소스로 설정설치하셔서 쓰실 수 있습니다. 있는데 문제는 여기에 보이는 모든 것들을 직접 관리를 해주셔야 되는 거죠. 이게 엄청난 수고가 들어가죠. 근데 20설치를 하시면 S 가 기본적으로 이 밑에 있는 주황색 부분 하드웨어나 유지 관리 뭐 하드웨어관리 뭐 이런 공중에서 이런 것들을 해드리죠. 관련해서는 근데 그 위쪽에 프레임부분이라고 해야 할까요? 콘서트에 관련된 그런 솔루션 에 관련된 부분은 직접 다 하셔야 되는 거죠. 예를 들면 업그레이드 버전 업그레이드 쉽지 않죠. 그다음에 모니터링 도 사실 어려운 문제이고 데이터가 많아졌을 때 스케일아웃 을 해야 된다 굉장히 어려운 문제죠. 이런 것들에 대한 관리를 해주셔야 된다. 근데 니스 서비스로 가면 대부분은 딱 해드립니다. 그래서 오렌지색으로 되어 있는 부분은 거기 가해 드리는 거고, 고객이 고민하셔야 될 부분에 제일 위해 개발이랑 최적화이 부분만 관심을 두시면 됩니다. 그래서 고 부인하실 때 사실 이런 비교장표를 보여 드리는 것이 좋고요. 여기서 특징적인 부분이 두 가지가 있어요. 하나는 여기 플러그인이라는 부분이 있고 하나는 전송 데이터 전송비용이 있습니다. 그래서 플러긴 같은 경우에는 직접 오픈소스를 가 더 쓰시면 사용하실 수가 없죠. 근데 매 니즈서비스 사용을 하시면 다 무료로 사용을 하실 수가 있습니다. 그리고 데이터가 AGE 간에 이렇게 데이터 농도가 여러 개가 있다고 생각을 해보죠. 세계 에이즈의 데이터를 드가 하나씩 있다고 생각을 해보면 이 데이터 도들끼리 통신을 할 때 통신비용이 들 거에요. 위해서도 근데 매 니즈서비스 살 하시면 이 통신비용이 무료입니다. 그래서 굉장히 많은 데이터 노드를 이용하시는 경우에 이 씨투에서 사용하시다가 전송비용이 감당이 안 돼서 매니지드 서비스를 넘어 오시는 경우도 있습니다. 이 두 가지 포인트는 가져가시면 좋을 것 같아요. 그리고 그 플러그인이 뭐가 있냐하면 밑에 보시면 S 계획 버리실시간 경보공백 상태가 이상한 감지멋있는 이 보안 이런 것들이 있어요. 그래서 엔터프라이즈 그룹에서는 이런 플러그인들이 필요하다 그런 내용을 말씀을 드립니다. 제가 지금 사십삼 분을 지나고 있는데요. 지금 저희가 초대할 때 한 시간 반 정도로 생각을 하고 초대를 드렸어요. 근데 계신 분들 중에 혹시 시간이 다들 되실지 모르겠네요. 그 내용을 하다보면 한시간 반 정도 걸릴 것 같은데 어떠세요? 그 다음에 스케줄이 있으신가요? 다구요 괜찮으신가요? 네. 네. 네. 감사합니다. 그러면 저는 일단 한 시간 반을 생각하고 얘기를 드릴게요. 그리고 혹시 안 되시는 분은 중간에 나가시면. 저희가 끝나고 나서 자료는 드릴 수 있으니까 그때 한번 다시 보시면 될 것 같아요. 그리고 두 번째 케이스는 겁니다. 라이센스를 사용하고 계신 분들 예를 들면 S 라던지 스플렁크 도 많이 사용하시죠. 다양한 라이센스 버전을 사용하실 수 있고 또는 데이터베이스 에서 직접 검색을 하시는 경우도 있을 수 있습니다. 그죠? 그런 케이스가 있는데 거기서 이제 콘서트서비스를 넘어오는 케이스고요 당연히 데이터 블로그 증가에 따라 가능한 비용을 초래할 수 있고 특정 솔루션 에 대해서는 데이터 비용 데이터가 늘어났거나 아니면 로드가 늘어날 때 S 비용은 더 많이 받는 경우도 있습니다. 그리고 데이터베이스 기준으로 검색을 하게 되면 데이터가 많아지면 많아질수록 검색량이 엄청나게 지연시간이. 늘어나죠 이런 문제가 당연히 있고요. 그래서 그런 의미에서 라이스 트랜스비용도 들지 않고 검색을 잘 할 수 있는 오픈 설치로 많이 나오는 오는구나 라고 생각을 해주시면 좋겠습니다. 그래서 지금까지 말씀드린 내용이에요 그 오픈SUCH 자체가 오픈섰습니다. 그래서 심지어는 이렇게 사용을 하시다가 온 프라미스 에다가 를 설치를 하실 수도 있어요. 그리고 다른 클라우드 에서도 설치를 하실 수가 있고요. 이런 이런 점에서 보면 의 낙인되는 게 아니라고 생각을 해주시면 될 것 같아요. 특정 솔루션을 사용을 하면 안이 될 수 있는데 그런 점이 장점이 될 수 있구나 라고 생각을 해주시면 좋고요. 정형이나 반정형 비정형 모두 데이터를 검색하실 수 있다. 그리고 머신러닝기능 같은 것도 사용해서 이상 징후같은 것들이 보실 수도 있고요. 아까 계속 말씀드린 플로비전이 소프트웨어 설치, 패치이런 것들을 다 자동으로 해주기 때문에 운영적인 코르스트라긍정적으로 도 문화라고 생각을 해주시면 좋겠습니다. 그럼 데이터를 어떻게 수집하냐? 라고 혹시 질문이 들어온다면 보통은 이런 과정을 통해서 들어옵니다. 제일 왼쪽에 데이터 소스가 있고 중간에서 이제 컬렉터라고 해서 보통 에이전트죠 에이전트를 설치하는 경우가 있고 그 다음에 버퍼를 두기 위해서 그 데이터를 두는 경우가 있어요. 그래서 이 세 가지의 그 과정을 통해서 복어치라는 들어왔고요. 사실 실무에서 제일 많이 쓰는 것은 입니다. 이라는 여성을 으면 예를 들어서 에서 데이터를 가지고 올 수도 있고 바로 아니면 어떤 서버에서 데이터를 가져올 수도 있고 아니면 에서 특정 서비스에서 또 욕을 가지고 올 수도 있어요. 그래서 실무에서는 오스트굉장히 많이 쓰는구나 라고 생각을 해주시면 좋고 입장에서 어떤 서비스 로 가지고 오면 좋습니까? 라고 물어보신다면 를 많이 쓰십니다. 을 쓰시면 실시간 데이터를 클릭 몇 번으로 해서 타겟이렇게 UI 하면서 넘기실 수가 있어요. 사용하시면 데이터를 수집할 수가 있구나. 그리고 수집한 데이터는 들을 통해서 보실 수가 있습니다. 그래서 저희 분석입장에서 보면 사실은 굉장히 많은 솔루션이 있는데 그 중에 하나검색솔루션이라고 생각을 해주시면 되고 다른 분석이 필요할 때는 사실 요건에 따라서 검색이 다 달라질 수가 있잖아요. 디 더블류가 원하시면 레드시프트 아니면 빅데이터 검검색 분석이 필요하시면 에만 아니면 뭐 이렇게 데이터를 바로바로 봐야 되는 에도 캉그런 데이터를 봐야 된다 안테나 그 다음에 STRING데이터가 필요하다면 케이스이런식으로 요건에 맞춰서 이제 서비스 선택하시는 게 중요하고 지금 계속 제가 말씀드리는 경우는 빠른 검색 그리고 로그 분석을 위해서는 앞에서 지를 사용하면 좋다 라고 생각을 해주시면 좋겠습니다. 그래서 이 부분 넘어갈게요 이미 너무 많은 고객들이 사용을 하고 계시고 네 홍보삼성 뭐 이런 되게 큰 곳에서도 많이 사용을 하고 계시죠. 다 내용은 하지는 않을 텐데 어떤 사용 사례가 있는지 좀 간략하게 말씀드리면 키워드만 말씀드릴게요. 업종얘기를 좀 되게 많이 나오죠. 그래서 에서도 많이 사용을 하시고 제일 앞서 말씀드린 것처럼 인프라스트럭처모니터링이나 애플리케이션 모니터링 에 대해서 사용을 하십니다. 당연히 검색 키워드검색 아니면 논문 검색이런 것들을 위해서 사용을 하시는 경우도 있고 그 다음에 보안 측면에서 어떤 특정한 가 이상한데 및 찍어가면서 여러 보고에서 보고 그 다음에 그 수사라는 걸 더 찾아서 또 따르는 로보에다가 검색을 하고 이런 것들을 위해서 사용을 하십니다. 주요 기능을 보면 세가지 측면이 있어요. 첫번째측면은 일반적인 검색도 가능한데 이라든지 검색이 가능합니다. 그래서 검색 측면에서도 굉장히 좀 다양한 검색을 하실 수가 있고 같은 경우에는 보통 어디서 되게 많이 쓰시냐면 데이터를 벡터화 시켜가지고 벡터 끼리 검색 할 때도 되게 많이 쓰시거든요. 예를 들면 쇼핑몰에서 빨간색 드레스 사진이 있는데 이것과 비슷한 것을 찾아줘 발대게임을 많이 사용하시고 음성검색 하실 때도 어떤 노래를 검색하고 싶은데 기존에 있는 노래와 얼만큼 매칭이 되는지 이거보고 싶을 때 음성을 백 토화 시켜서 벡터 끼리 이제 같은거 검색을 하실 수가 있죠. 그리고 사용자 정의 사전 사용하실 수 있다고 되어 있는데 예를 들면 동요와 같은 게 필요할 수 있잖아요. 예를 들면 뭐 삼성전자와 삼 전 이거는 같은 의미라고 만약에 본다 비즈니스적으로 그런 동요사진을 통해서 이런 것들도 같이 검색 하게 할 수 있죠. 그런 사용자가 삼 년 만검색을 해도 삼성전자가 있는 그를 찾아낼 수가 있는 거죠. 할로라는 내용이 있는데 기존에는 그러면 사전 파일 이런 것들을 적용하면 클러스터를 한번 내렸다고 올려야 되는 그런 수고로이 있었어요. 그런데 치서비스를 사용하시면 퍼센트 서비스를 사용하시면 이런 것들이 바로 그냥 사용을 할 수 있다. 클라스를 내리지 않고도 모두를 할 수 있다라고 생각을 해주시면 되고요. XX 라고 하는데 다양한 레벨로 X가 돼요. 그래서 클라스타 레벨로 XS 도 되고 아까 말씀드린 인덱스 레벨그 다음에 그 안에 있는 문서 레벨제가 가능합니다. 그래서 들어오는 사용자 요청에 따라서 어디는 보여주고 안 보여주고 이런 것들이 제가 된다. 그리고 감사도 당연히 돼야 되죠. 어떤 사람이 뭘 어떤 날렸는지 이런 것들 다 확인이 가능하고요. 그 다음에 스트레스 애널리틱스 라고 해가지고 요즘에 가장 또 핫한 부분은 좀 하나죠. 마이크로 서비스들이 굉장히 많이 분포되어 있고 이것들이 나오는 로고들이 먹어서 어디에서 문제가 되는지, 또는 어디서 병목 현상이 생기는지 이런 것들을 보고 이제 문제를 해결할 수 있도록 하는 화면이 있습니다. 그래서 그런 기능 또 사용을 하실 수가 있고 나중에 설명드리겠지만 오트라그다음에 콜드스토리지 같은 기분이 있습니다. 그리고 작가치우라고 되어 있는데 클러스터 안에 있는 각각의 노드 중에 하나가 문제가 생기면 알아서 얘를 탈락시키고 아직 새로운 로드를 만들어서 기존에 있던 데이터는 다 마이그레이션 해서 쓸 수 있도록 하는 부분을 가 자동으로 해줍니다. 그래서 그런 부분을 자가 치우라고 보시면 될 것 같고 기능 같은 경우는 오프사치자체가 컨트롤 에 대해 컴퓨터 너무 많아요. 너무 많은데 그중에서 좀 의미 있는 설정 들은 S 가 뒤에서 이제 모니터링하고 있다가 인스턴스상태에 맞춰서 설정 값 이렇게 바꿔 줍니다. 그래서 이런 것들도 좀 운영측면에서는 버드이 좀 줄어들 수 있겠구나 라고 생각을 해주시면 좋겠습니다. 울트라기능이 있어요. 이게 뭐냐면 로그를 데이터를 쌓는다는 얘기는 매일마다 문구가 생기잖아요 요구가 그러면 데이터가 내일 마다 증가한다는 얘기거든요. 근데 그런 데이터를 증가하는 것을 쌓기 위해서 치노 들을 계속 물리면 비용이 어마어마하게 늘어날 거잖아요. 그런 상황에서 사용을 하실 수가 있고요. 보통 클러스터를 만든다고 하면 이 위에 있는 구성을 하게 됩니다. 그래서 마스터 노드가 있고 그 다음에 데이터 노드가 있어요. 그래서 마스터 노드는 말 그대로 머리 역할을 하는 거고, 데이터 노드는 데이터에 대한 검색이나 처리를 직접적으로 하는 로도 입니다. 그리고 여기에 실제로 데이터가 담겨요. 데이터 근데 이렇게 계속 쌓아가다 보면 너무 비용이 많이 드니까 좀 싼 스토리지를 사용할 수 없을까 라는 개념에서부터 출발을 한 거예요. 그래서 보급은 사업을 가만히 생각을 해보면 우리가 일 년 전 데이터를 많이 보지는 않아요. 삼 년 전 데이터를 더욱 많이 안 보겠죠. 대신 최근 데이터를 많이 보는 성격이 있어요. 예를 들면 한 시간, 년 데이터 또는 오늘 데이터 이런 데이터는 굉장히 많이 보죠. 지금 막 벌어진 상황에 대해서 궁금해할 테니까요. 그래서 그런 경우에 좀 자주 보는 데이터를 하는 오드의 놓고 자주 안 보는 데이터를 울트라있으니까. 그러면 데이터가 실제로 울트라에 들어갈 때는 데이터가 S. 그러니까 여기 들어가 있는 같은 곳에 들어가는 게 아니고 전향되기 때문에 굉장히 싼 가격이 데이터를 러보관을 할 수가 있어요. 그래서 데이터를 자주 안 보는 녀석은 집어 넣었다가 필요한 검색 요청이 오면 그때 다시 캐쉬를 올려서 데이터를 검색하게 해주는 그런 기능이라고 보시면 됩니다. 그래서 최대 구십 퍼센트 비용절감 이라고 했는데 이건 사실은 최대 고요. 이 정도까지는 될 수 있을지는 상황에 따라 다르지만 어쨌든 한 로들을 계속 붙이는 것보다 굉장히 싼 비용으로 쓰실 수 있다 는 거고 최대 3 패터까지 가능하고 그 다음에 또 중요한 건 S 데이터가 되어 있지만 검색이 된다는 게 중요합니다. 그래서 검색 까지 쓸 수 있다라고 생각을 해주시면 좋겠습니다. 콜드스토리지 가 있는데 아까 설명드린 부분여기까지 거든요. 그래서 가지가 있는데 이런 경우가 있을 수 있어요. 예를 들어서 삼 년치 오년치 데이터를 저장을 해야 되는데 우리 검색 할 일은 거의 없어 근데 법적인 문제 때문에 이거는 계속 보관을 해야 돼 이런 케이스가 있을 수 있잖아요. 그런 케이스에서는 아예 그냥 콜드스토리지 에 나오실 수가 있어요. 그러면 비용이 더 줄어들 비용 자체가 그리고 용량 제한도 없어요. 무제한이에요 그래서 데이터 자주 보는 거는 한 노래 넣고 여기서 뭐 이런 패턴이죠 일주일치 데이터는 개혁칼로리에 넣고 일주일이 지나가면 물트라우마를 넣고 그다음에 한 달이 지나가면 그 이후부터는 콜드스토리지 넣고 그래서 비용은 좀 더 최적해서 사용할 수 있는 그런 기능이라고 생각을 해주시면 될 것 같아요. 그래서 방금 말씀드린 부분이고요 데이터가 이렇게 인덱스 형태로 들어오면 가장 처음에 빠르지만 좀 비싼 핫에다 데이터를 집어넣고 특정 기간이 되면 울트라돈을 콜드스트레스에 집어넣고 이후에 우리 진짜 볼 일 없어 그러면 삭제해 버리는 이런 라이프 사이클을 보통은 가져가신다 그 를 쓰면 빠르다는 건데, 이 부분은 사실 특별한 부분은 아니에요. 에서 형태가 계속 나올 때 가 그 투이런 것들이 나오잖아요. 앞으로 쓰리도 나오고 할 텐데 이런 것들을 사용하시면 기존의 인터넷 보다 X 팔 육 기반 보다 좀 더 빠른 성능을 사용하실 수 있다, 이런 내용이고요. 그 다음에 아까 잠깐 말씀드린 부분 중에 하나가 마이크로 서비스를 추적하면서 이게 쉽지 않다고 해서 문제가 생겼는지 그런 것들을 좀 매트릭이라는 요구를 받아 와 가지고 이렇게 시각화된 화면에서 보고 예를 들어서 이쪽이 문제가 있다라고 여기 딱 클릭하면은 여기에 관련된 요구들이 쭉쭉 쭉 나옵니다. 그것보다 더 분석해서 볼 수 있게 하는 기능 이라고 보시면 되겠습니다. 또 이런 구성을 하실 수도 있어요. 그래서 클러스터를 하나를 두고 여기는 굉장히 클러스터를 빵빵하게 됩니다. 성능을 좀 해두고 여기는 좀 성능을 안 좋게 주거나 이렇게 했을 때 이 두 가지를 서로 연결하실 수가 있어요. 그래서 여기서 검색 만 있는 게 아니라 여기서 검색을 요청을 하는데 여기에 있는 데이터를 가지고 와서 도 같이 볼 수가 있거든요. 그래서 플러스 클러스터 검색 이라고 하는데 이런 케이스도 있을 수 있고, 아니면 부서 간의 아이의 그냥 가용성측면에서 그냥 나눌 수도 있는거죠. a부서는 여기다 클러스터 를 만들고 부서는 여기가 플러스를 만들어서 서로 간섭하지 않겠지만 데이터는 같이 검색하고 싶어 이런 경우에는 플러스클러스터 기능을 사용하시면 이런 기능은 좀 사용을 하실 수 있습니다. 미플루를 하시면 보시는 화면처럼 디플레이가 돼요. 그래서 화면에서 유아에서는 되게 쉽게 클릭클릭하셔서 디플로가 되겠지만 내부적으로는 이런 구조를 가지고 있습니다. 디플레이가 만약에 된다고 치면 그래서 이제 데이터 노드가 디플로이 될 거고 울트라모두 이건 선택 사항입니다. 이건 안 하실 수도 있고 하실 수도 있는데 만약에 하시면은 이렇게 디플레이가 되고 그 다음에 마스터노드 그가 이렇게 디플레이가 돼요. 그래서 가장 싸게 한다. 가장 하고 일반적으로 한다. 그러면 데이터 노드 만 선택을 하실 수도 있거든요. 그러면 일단 울처럼 능력이 없는 상태에서 리더 역할을 하는 마스터노드 가 여기 이렇게 각각 들어가야 조금씩 우리 근데 그렇게 되면 실제로 데이터 놈드가 처리해야 되는 부하가 어느 정도 확보가 돼야 되는데 마스터 그 역할을 하는 것을 여기에서 그 역할을 하고 있으면 문제가 될 수 있겠죠. 문제가 된다는 것은 검색이 느려지거나 데이터를 넣는 게 느껴지거나 할 수가 있습니다. 그래서 그런 측면에서 얘를 데리KT 마스터라고 이런 식으로 따로 빼놓기로 권자가 들은 것 프로덕션이에요. 그래서 테스트하실 때는 그렇게 하실 수 있겠지만 콘솔 해서 만드실 때는 아예 따로 빼서 마스터노드를 따로 만들어주잖아 라는 내용이 있고요. 그리고 실제 이제 데이터 요청 이렇게 들어오면 공간에서 로드 밸러스를 통해서 이렇게 넘어갈 텐데 결국에는 실제로 데이터 처리를 하는 거는 데이터 노르구나. 그러면 우리가 데이터가 많아지거나 허리 요청이 되게 복잡해지거나 하면 처리하는 역할이 데이터 로드에서 다 처리를 하기 때문에 사실 마스터 로드의 규모를 늘려주는 것은 크게 의미가 없고요. 데이터 노드에 대해서 인스턴스를 더 높여주거나 스캔을 하거나 스키라오스라는 의미가 있습니다. 맞서는 또 언제 의미가 있느냐? 이 데이터 농도 자체가 개수가 늘어날 수 있잖아요. 네 개 이렇게 20늘어났을 경우에는 맞춰서 마스터노드 도 성능을 좋게 해줘야 된다. 그 정도로 생각을 해주시면 됩니다. 그래서 여기서 나온 모든 로 그들은 다시 당연히 클라우드워치에서 볼 수도 있고 클라우트 레인에서도 작업을 보실 수가 있어요. 데이터 놓는 입장에서 보면 좀 전에 말씀드린 있는 을 쓰시면 편하다. 그리고 를 쓰실 수도 있고요. 다양한 방법을 쓰실 수 있어요. 카프카에서 나오시는 경우도 굉장히 많고 플링크를 서서 넣으시는 경우도 있어요. 실시간 데이터를 이렇게 처리한 다음에 을 링크를 통해서 나오시는 방법도 있습니다. 그래서 다양한 방식으로 쓰실 수 있다. 보시면 되고 보완적인 측면에 저희가 모든 서비스가 그렇지만 굉장히 신경쓰고 있는 부분 중에 하나고요. 당연히 통신은 앞뒤로 하고 있고 그 다음에 로 격려를 시킬 수가 있어요. 그래서 퍼블릭으로 열지 않는 것이 베스트 프랙티스 고요. 안에 만 드시고 놀이나 아니면 앞쪽에 이제 다양한 방법들뭐 코그니트를 사용하셔가지고 사인 업을 하실 수도 있고 아니면 자체적인 이랑 패스워드를 가지고 있는 시스템 있기 때문에 그걸 사용하셔가지고 로그인을 하실 수도 있습니다. 그리고 데이터 적인 측면에서 보면 저장된 데이터를 사용하셔가지고 암호화시킬 수 있고 그 다음에 이렇게 노드 끼리 데이터 통신할 때 통신관에서도 암호화를 시키실 수가 있습니다. 그래서 노부부는 그렇게 생각을 해주시면 될 것 같고요. 제가 이제 시간이 없다 보니까 조금씩 빨리 가기 시작하네요. 혹시 이해가 안 되시는 부분은 스톱시켜주세요 그러면 다시 한번 설명을 드릴게요. 그리고 다양한 플러그인들이 있다고 말씀을 드렸는데 그 중에 하나가 이제 기능 이죠. 그래서 데이터를 쭉 밀어 넣고 데이터를 보면서 뭔가 룰을 기반으로 이 삼치를 탐지하는 게 아니라 데이터에 특성을 가지고 이 삼치를 탐지를 하는 겁니다. 그래서 쭉 보다 이상한 특성이 딱 발견되면 이거는 좀 뭔가 이상하다, 그래가지고 알라하면 주는 그런 기능을 많이 사용을 하십니다. 이런 기능도 사용할 수가 있다 이런 기능들은 사실 라이센스 버전에서 사용하시려면 돈 내고 사용을 하셔야 되는데 포스치를 사용하시면 다 무료로 사용하실 수 있습니다. 그게 다양하게 있는데 이거는 필요하실 때 보시면 될 것 같아요. 그래서 다양한 사례들이 있어요. 정도만 알고 있으시면 되고 필요하실 때 가져다 쓰시면 될 것 같아요. 그런데 여기까지가 사실은 아까 전에 말씀드린 세일즈적인 측면 그리고 오금SUCH 에 대한 서비스 적인 측면을 말씀을 드린거고 지금부터는 약간 엔지니어링관점으로 이제 들어갈 거예요. 그래서 자 이 내용이 나오는데 저희가 이제 세션을 이제 매주 마다 한시간씩 하잖아요. 근데 오늘 한 시간 하고서 다음주 는 실제 라이브는 없습니다. 는 없는데 전체 실상구사한 것 중에 좀 필요한 부분이 빠져 있는 게 있어요. 그래서 그 부분, 내부 구조를 설명하는 거랑 그다음에 클러스터 구성을 어떻게 하면 좋을지, 그 다음에 최적화방법은 검색 이나 인덱스 입장에서 어떻게 하면 최적화할 수 있는지 이런 것들이 좀 빠져 있는데 그 내용을 저희가 4 강에 자로 전달받으실 수 있습니다. 받을 수 있고 지금 말씀드린 것은 요기 영상이 있습니다. 여기 여기 들어가시면 유튜브에 찍어 놓은 게 있거든요. 그래서 이거를 다음주 차이서민님이 인비테이션이랑 같이 주실 주소를 같이 드릴 거예요. 형님 가능하시죠 네 주소를 드릴 거고 이 주소이 주소를 오늘 보시는 것처럼 보시고 나서 그 다음 세션오시면 될 것 같아요. 그래서 이거를 보시면 다음 세션에서 계속 연결되는 내용들이 있거든요. 꼭 보시기에 추천을 드리고 저희 실제 아니시고 개발하시는 개발자분들도 이거 보시고 엄청 도움이 되셨던 분들이 많거든요. 그래서 꼭 보기를 추천해 드립니다. 그러면 이제 저희가 세션을 여러 차례 나눠서 하긴 하겠지만 사실 한 시간씩 8 번 일곱 번 한다고 해서 돈 어지는 않았어치의 내용을 그렇게 심도 깊게 알기가 쉽지가 않잖아요. 모든 솔루션이 그렇듯이 그러면 모든 걸 다 알려드릴 수는 없으니까 어떻게 이제 물고기를 잡아야 될지 낚시하는 방법을 좀 알려드리면 좋을 것 같다 라는 측면에서 첫째 시간을 좀 얘기를 드리고 싶었어요. 그래서 네, 그 오프를 공부하시다가 그 매니지드 서비스, 그니까 S 가 관리하는 서비스 측면에서뭔가가 궁금하다 싶으시면 여기 주소보시는 것처럼 잘 알고 계시는 아마존의 공식 도큐먼트를 보시면 됩니다. 이 주소를 들어가시면 그 매니지드 서비스 입장에서 어떻게 관리를 하고 있고 어떤 걸 봐야 되고 어떤 매트를 봐야 되고 어떤게 중요한 사항인지 이렇게 나와 있어요. 그래서 이렇게 보시면 되고 여길 보시다가 좀 부족한 경우가 분명히 생겨요. 부족한 경우가 생기냐 오픈소스 커뮤니티에 들어가시면 됩니다. 얘기보면 지점이라고 되어있죠. 그래서 이거는 매니지드 서비스 고 얘는 그거에 오픈소스코드 라고 보시면 됩니다. 그래서 여기에 들어가시면 좀 더 자세하게 나와 있어요. 어떤 게 잘살게 나와 있냐예를 들면 특정 쿼리를 하시는데 쿼리종류가 굉장히 많잖아요. 근데 여기도 코멘트에 가시면 되게 개념적인 심플한 쿼리설명이 되어있는데 여기 들어가시면 그 쿼리의 세부 옵션 이라든지 컴퓨이라든지 이런 것들이 되게 잘 정리가 되어 있어요. 그래서 여기서 좀 부족하다 싶으신거는 한 단계 더 들어가서 이렇게 오픈서점에 들어가시면 찾아보실 수 있다 내용을 그리고 또 여기서 좀 부족한 게 있을 수도 있어요. 여기서 부족한 게 있을 수도 있는데 그런 경우에는 기존에 제가 엘라스틱 SUCH 오픈소스에서 포크를 딴 거라고 했잖아요. 그러면 여기서도 도큐먼트가 있거든요. 그러면 여기서 부족한 것들은 오픈소스도큐먼트를 가셔가지고 참고하시면 설명도 좀 더 잘 되어 있는 경우도 있고 했기 때문에 이렇게 레베링을 두시고 보시면 좋아요. 그래서 물사이트 먼저 들어가고 그 다음에 커뮤니티 사이트 들어가고 좀 부족한 것은 엘라스틱 쪽에서도 확인하실 수가 있습니다. 근데 여기까지 가면 대부분 문제가 해결됩니다. 대북 문제가 해결되는데 트러블슈팅하실 때 여기서 해결 안 되는 경우도 있어요. 또는 뭐 이런 거 많이 보실 텐데, 거기서 용어들이 새롭게 나왔다 이러면 루신을 보시는 게 좋습니다. 그래서 누신 도 여기 제가 밑에다가 적어 놨는데, 지금 화면에서 좀 가려져 있죠. 김 씨는요 네. 루시매도다음에는 도큐먼트가 있거든요. 도큐먼트를 참고하시면 더 자세히 내부 구조를 더 보실 수가 있어요. 그래서 이렇게 순서대로 보시는 게 좋다, 그리고 저는 사실 처음에 오 츠접근했을 때 이런 구조에 메커니즘을 몰라서 되게 많이 고생을 했거든요. 뭐 이 사이트 굉장히 많이 보게 될텐데 여기서도 나와 있는 자료도 있지만 좀 부족한 자료 들이 굉장히 많아서 어떻게 공부맨날 구글링만 했었는데 메커니즘을 알고 나서부터는 이런 식으로 이제 순서적으로 들어가는 순서대로 공부를 하시거나 아니면 더 보시면 좋습니다. 그래서 말씀드린 것처럼 저희 공식 도쿄 먼트가 있고 그 다음에 시점커뮤니티 노코멘트가 있고 그 다음에 실제로 더 포크닭엘라스티SUCH 도쿄 먼트가 있으니까 여기서는 순서대로 보시면 좋을 것 같아요. 그리고 아키텍처관점에서 모범사례를 많이 물어보시는데. 저희가 최근에 발표한 문서가 있거든요. 여기 링크를 걸어왔는데 네 가지 측면에서 어떻게 사용하는 것이 모범사례인지 저랑 설명이 옆에 나와있습니다. 이것도 구글링 하면 잘 안 나올 수 있는데 여기 문서 에 들어가시면 도움이 되실 거고 여기에 이제 순서대로 번호를 맞춰가지고 설명이 되어있어요. 그래서 검색, 사례라든지 요구, 분석, 사례라든지 이런 것들에 대해서 좀 보실 수 있으니까 그것도 참고를 하시면 나중에 도움이 되실 것 같습니다. 그리고 최추천해 달라는 얘기를 굉장히 많이 제가 듣는데 한국어로 된 책들도 있어요. 엘라스틱 SUCH 라는 키워드로 검색을 하시는 그냥 한국어로 된 내용들도 많은데 그거 되게 읽기십주한국어로 되어 있으니까 그것도 괜찮긴 한데 저는 개인적으로 이 책을 굉장히 추천을 드려요. 나온 지가 좀 오래되긴 했습니다. 그래서 지금 최신 버전이랑은 좀 안 맞는 내용들이 가끔 있긴 한데 전체적인 구성이라든지 그 다음에 더 깊이 라든지 이런 걸 봤을 때는 이 책이 굉장히 저는 도움이 많이 됐어요. 그래서 영어로 되어 있어서 좀 힘들긴 하지만 묘책을 한번 보시면 웬만한 내용들은 다 이해를 하실 수가 있거든요. 그래서 시간이 되시거나 아니면 좀 궁금사항 좀 더 깊게 생긴다 라는 이 책을 보시는 것을 추천을 드리겠습니다. 참고로 저는 이 책과 전혀 관계가 없는 사람입니다. 그리고 이제 앞으로 이제 계속 세션이 진행되면 됨에 따라서 좀 헷갈리실 수가 있는 부분이 용어입니다. 그래서 용어정리를 한번 해보셨으면 좋겠다라는 생각이 들어서 이제 준비를 했고요. 여기 왼쪽 편에 오픈SUCH 예요. 그리고 여기가 우리가 잘 알고 있는 데이터베이스 라고 생각을 해주시면 됩니다. 그러면 우리가 계속 얘기할 때 인덱스가 뭐가 어쩌고 저쪽 얘기가 계속 나왔었죠. 인덱스는 데이터베이스에서 테이블이라고 생각을 하시면 돼요. 근데 제가 여기서 크게 써놨죠 일대일이 아니며, 주의 같은 의미는 아닙니다. 같은 의미는 아닌데 좀 처음 공부하시는 분들이 이해하시기 쉽게 이렇게 매핑한번 해 본 거예요. 그래서 인덱스 는 데이터베이스에서 테이블 이랑 비슷하구나 라고 생각을 해주시면 되고, 아까 전에 스미스 데이터를 넣을 때 도쿄 모터를 넣을 때 우리가 인덱스 를 인적 관련된 인덱스 를 넘는다고 했잖아요. 인적사항인덱스 를 만든다 베이스 에서도 일적 사항관련한 테이블을 만들 수 있겠죠. 같은 의미라고 보시면 분들 이미 론적으로는 비슷하지만 일대에 매체는 아닙니다. 이걸 좀 주의 해주시고 인덱스는 테이블이랑 비슷하구나. 그리고 말씀을 드렸죠 기억나시나요 혹시 기억나시는 분 1 번 한번만 눌러봐 주셨네요 내가 허공에 대해 얘기를 하고 있는 것 같아서 지금 감사합니다. 네 감사합니다. 인덱스가 하나가 있으면 인덱스 밑에 여러 개의 샤드가 이렇게 생길 수 있다고 했죠. 물리적으로 네, 그 그림 기억나실 거예요. 파란색으로 된 그림 샤드는 데이터베이스에서 파티션이나 비슷하다고 생각을 해주시면 돼요. 물리적으로 나눠서 뭔가 데이터를 찍어 먹는다. 자 문서 문서 같은 경우에는 레커맨드또는 행이런 식으로 표현을 하죠. 레코드 레코드 또는 행이렇게 로 이렇게 표현을 하는데 비슷한 의미구나라고 생각을 해주시면 되고 필드 라는 얘기도 계속 나올 거예요. 필드는 데이터베이스 에서 열과 비슷하거나 컬럼이랑 비슷하거나 라고 생각을 해주시면 됩니다. 아까 스미스가 들어가 있는 제이슨 용서를 생각나시죠. 그래서 네이 스미스 이렇게 돼 있었는데 네임에 해당되는 게 필드 고요. 요필드가 데이터베이스 에서는 컬럼역할을 하는구나 라고 비슷하다고 생각을 해주시면 됩니다. 맵핑 이라는 얘기가 나올 거예요. 이거는 데이터베이스에서 스키말을 만드는 과정과 비슷하거나 스키막아뭐냐 라고 하면 컬럼은 어떤 거고 컬럼타입은 뭐고 컬럼사이즈는 얼마고 이런 것들을 정하는 거 있잖아요. 그런 것들에 비슷하게 하는 게 매핑작업이 있구나 라고 생각을 해주시면 되고 콘서트에서는 이 권리를 검색할 때 보통 이라는 쿼리 이미지를 사용을 해요. 그래서 S 검색 하는 것처럼 이라는 걸 사용해서 검색을 하는구나 라고 생각을 해주시면 됩니다. 그래서 이런 용어가 나왔을 때 당황하지 마시고 데이터베이스 에서는 이런 의미비슷한 의미였지 라고 생각을 해주시면 좀 이해가 쉬울 것 같아요. 계속 나오는 얘기이기 때문에 한번 정리를 한번 해봤습니다. 그리고 오른쪽에 보면 세균이라는 내용이 나오는데 자 그 영어만 보면 비슷하죠. 이 인덱스 팅이고 밑에는 인덱스 입니다. 되게 헷갈려요. 그리고 데이터베이스 에서도 인덱스 가 있죠. 제가 굉장히 헷갈리는데. 인덱싱이라고 나오면 얘는 데이터를 실제로 물리적으로 집어넣는 과정이구나 라고 생각을 해주시면 돼요. 버스에서 포스에서 우프 데이터를 지원하는 과정이구나. 이 과정을 청틀어서 새긴 이라고 하고 인덱싱이라고 합니다. 설명을 보면 데이터를 검색 될 수 있는 구조로 반영하기 위해서 원본 문서를 검색어 토큰들로 변화하는 과정저장가서 저장하면 일련의 과정이렇게 되어있죠. 그래서 데이터를 넘는 작업 자체를 인덱싱이라고 하고 있고 그 안에서는 여러가지 작업이 이루어지죠. 그리고 인덱스 는 여기에 있는 인덱스 입니다. 테이블과 비슷한 의미로 쓰는 인덱스라고 생각을 하시면 됩니다. 에서 책임 과정이 것 책임 과정을 거친 결과물그리고 책임 된 데이터가 저장되는 저장소라고 보시면 돼요. 그리고 인 더 시즈라는 말이 가끔씩 나와요. 책 같은 거 보시면 또는 구글링 하시면 나오는데 인덱스가 하나의 되는 인덱스 인데 두 개, 세 개 네, 개씩될 때는 인데 시즈라고 보통 얘기를 많이 하거든요. 그래서 개념이 같은 개념이구나 라고 생각을 해주시면 되겠습니다. 운영모범사례를 물어보시는 경우가 굉장히 많은데 이것도 케이스케이스에요 너무 많아요. 내용이 그래서 이것도 으로 하더라도 이것도 한 세시간 정도 될 수도 있어요. 그래서 근데 이거를 한 번에 다 듣는다고 해서 사실 머릿속에 다 들어오진 않잖아요. 필요한 거 있으실 때마다 클릭하셔서 들어가시면 상세한 내용은 설명이 되어있고 사실 이 링크 들은 여기 밑에 있는 공식 문서에 있는 링크입니다. 그래서 여기에서 참고를 하시면 저희가 에서 경험적으로 가지고 있는 모범사례들을 정리해놨으니까 여기서 참고를 해주시면 좋을 것 같아요. 그리고 저희가 좀 들어온 것 중에 하나가 이제 고객분들이 질문하시는 것에 대해서 우리가 이해를 하지 못하는 경우가 있으면 안 되잖아요. 그래서 그런 부분을 위해서 를 놓아 놓은 곳이 있습니다. 주로 많이 물어보시는 것들이고요. 그래서 토픽들을 보면 일반적인 사 설정 관리, 구성, 요구 등등등이 있습니다. 그래서 요런 카테고리에서 많이 하는 질문들을 모아 놨기 때문에 미팅가시거나 아니면 업무하시기 전에 한번 쭉 읽어보시면 도움이 될 거라고 생각을 하고요. 그리고 실제로 작업을 하시면서 트럭을 스팅하실 때 문제가 생기는 경우가 많지 않잖아요. 그런 경우에는 여기 문서를 보시면 자주 발생하는 문제에 대해서 저희가 또 정리해 놓은게 있어요. 여기를 한번 보시면 도움이 되실 거라고 사람 여기까지가 오늘 세션에서 준비한 내용이고요 막판에 있는 세시부터. 제가 좀 설명 드린 후 단 얘기들은 사실 이걸 세션으로도 그거를 할 수 있겠지만은. 이게 사실 필요한 상황이 아니면 뒤에 잘 안 들어올 수도 있고 내용 자체를 너무 반대해서 사실 설명을 쭉 드리는 것보다는 이런 것들이 있다는 것을 큐레이션 처럼 모아두고 가지고 계셨다가 나중에 보실 수 있게 도움 드린 것도 좋겠다 라고 생각해서 이렇게 모아봤습니다. 네. 제가 오늘 준비한 내용은 여기까지고요. 혹시 여기까지 내용 중에 질문이 있으시거나 뭐 피드백주실 내용이 있으시면 편하게 채팅창에 남겨주시거나 마이클 키시고 얘기를 해주셔도 됩니다. 네. 질문 있으시면 채팅창에 남겨주시면 좋겠습니다. 저도 그렇지만 원래 이런건 이렇게 이제 질문을 하고 있는 그렇긴 하죠. 네. 자료들은 메일로 드릴 거고요. 오늘 성혜림강의 너무 열정적으로 잘 해주셔서 감사합니다. 그리고 제가 그 강의 들으시는 분들 아들한테 미리 좀 부탁드리고 싶은 것은 저희가 사실 뭐 이렇게 숙제를 있다 이렇게 처음에 얘기를 했지만 그 숙제라는 게 매일 있지는 않습니다. 그리고 중간중간에 뭐 이제 성인님께서 퀴즈를 주실 수도 있고 HAN지 오늘 이렇게 또 주실 때가 있을 거예요. 그래서 그런 것들은 그때 그때 제가 할 수 있는 뭐 이벤트에 진이나 이런 것들은 드릴 거고요. 그리고 저기 미팅에서 제가 그 잠깐 언급드렸지만 마지막에 강의를 듣고 이제 간단한 을 프로젝트라고 해서 뭐 이렇게 본인이 이렇게 아이디어를 내려서 요런 뭐 나는 검색 시스템을 하나 만들어봤다 이런 뭐 친화적인 뭐를 만들어봤다 이렇게 크게 부담가지실 필요 없습니다. 간단하게라도 만들어 만들어이렇게 주시면 되고요. 뭐 굉장한 거를 저희가 기대하는 건 아니에요. 실제로 강의 만드는 게 아니고 내가 이런거를 만들었다라고 하는 거를 이렇게 이렇게 만들어 주시면 좋겠습니다. 그리고 중간사실 오늘 강의도 이렇게 들었지만 듣고 지나가면 우리가 잊어버리거든요. 그래서 시간 내셔서 뭐 이렇게 정리를 좀 해 주시거나 또 어떤 분은 또 같은 거 이렇게 질문이런 것들 궁금한 것도 우리 강의하다 나온 것들을 모아서 이렇게 만들어주시고 공유해주시면 뭐라도 좋습니다. 창의적으로 만들어 주신 분들한테는 이제 제가 예를 든 거예요. 이렇게 강의를 어디 페이지 에다가 이렇게 정리를 해주신다거나 또는 이제 나중에 뭐 그리고 프로젝트 에서 잘 만들어주신 분 에게는 제가 개인별로 해야 할지 아니면 회사레벨로 해야 될지 모르겠지만 사실은 그 그 저희 시험을 좀 볼 수 있는 쿠폰을 제가 좀 이렇게 그 협찬을 좀 받고 있거든요. 구체적으로 아직 몇 개를 받을 수 맞지 않을 수도 있어요. 그렇지만 뭐 을 하고 일반 일반하고 그 다음에 그 밑에 보죠. 파운데이션 인가요? 그런 종류별로 몇 장씩 쿠폰도 이렇게 좀 준비하고 있습니다. 근데 오늘 오신 분이 열일곱 분이니까 경쟁률이 다른 거에 비하면 그렇게 높지 않은 그게 상황이 될 수도 있거든요. 그래서 적극적으로 만들어 이런 것들을 그냥 듣고만 끝내지 마시고 적극적으로 이렇게 결과물들을 남겨주시고 홍보해주시는데 도움을 주시면 그런 것들도 시상하는 것도 잊지 않고 이렇게 드리도록 하겠습니다. 네. 그러면 강의 자료는 다시 보내드릴 거고요. 다음 그러면 그 영상을 보고서 하는 걸로 이해하면 될까요? 네, 맞습니다. 해주시고 그 전에 저희가 말씀 주신 것처럼 간단한 퀴즈 같은 거를 좀 들어가지고 복습하실 수 있도록 그렇게 좀 하는 게 좋을 것 같아요. 그래서 성공을 통해서 간단한 퀴즈 같은 것들을 좀 보내드릴 거고 저는 좀 개인적으로 이렇게 생각을 하고 있는 게 저희가 파트너사들분들 끼리도 사실 이렇게 한 군데가 쉽지가 않잖아요. 그래서 계신 분들 끼리도 약간 일종의 소통같은 것들이 좀 되면 좋지 않을까라는 생각이 들어요. 저는 개인적으로 사실 저희도 어디 스턴가 다시 만날 수 있는 분들이잖아요 같은 업계에 있는 분들이기 때문에 얘기도 좀 많이 해주시고 그러면 더 도움이 되지 않을까 싶습니다. 사실은 저희 파트너 커뮤니티 미팅이나 이런 것들도 있는데 그런 것들은 제가 따로 또 안내를 드리도록 하겠습니다. 그리고 마지막 주에 이렇게 만나 뵙고 이렇게 하는 걸로 돼 있는데 또 이렇게 이런 채팅방을 통해서 또 적극적으로 호응해 주시면 그 전에라도 또 혹시 또 만나게 될지도 모르겠습니다. 네, 그럼 오늘 강의감사드리고요 성인님께서 자료 보내 주시면 그리고 이제 또 숙제숙제라고 부담 갖지 마시고요. 이렇게 문제를 보내주신다고 했으니까 그런 걸 풀어서 좀 정리해서 메일로 저한테 주시고 또 개인 블로그나 이런데다가 또 올렸다고 이렇게 해주시면 더 감사하겠고요. 네. 그럼 오늘 강의는 여기서 마치도록 하겠습니다. 수고하셨습니다. 알겠습니다.